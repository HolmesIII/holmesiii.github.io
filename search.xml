<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>common-lisp-variables</title>
      <link href="/2022/08/12/common-lisp-variables/"/>
      <url>/2022/08/12/common-lisp-variables/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>转载自<a href="https://gigamonkeys.com/book/">《Practical common lisp》</a></p><h1 id="变量基础"><a href="#变量基础" class="headerlink" title="变量基础"></a>变量基础</h1><blockquote><p>Common Lisp 是动态类型的语言——动态检测类型错误, 另一方面，Common Lisp是一种强类型语言——没有办法将对象视为不是它的类的实例, Common Lisp 中的所有值至少在概念上都是对对象的引用  —— practical common lisp</p></blockquote><p>变量的声明:</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">let</span> (<span class="string">&quot;变量&quot;</span>)</span><br><span class="line">  <span class="string">&quot;作用域&quot;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;把10赋值给x, 20赋值给20, 初始化 z&quot;</span></span><br><span class="line">(<span class="name">let</span> ((<span class="name">x</span> <span class="number">10</span>) (<span class="name">y</span> <span class="number">20</span>) z)</span><br><span class="line">  ...)</span><br></pre></td></tr></table></figure><p>嵌套的let语法:</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> foo (<span class="name">x</span>)</span><br><span class="line">  (<span class="name">format</span> <span class="literal">t</span> <span class="string">&quot;Parameter: ~a~%&quot;</span> x)      <span class="comment">; |&lt;------ x is argument </span></span><br><span class="line">  (<span class="name">let</span> ((<span class="name">x</span> <span class="number">2</span>))                        <span class="comment">; |</span></span><br><span class="line">    (<span class="name">format</span> <span class="literal">t</span> <span class="string">&quot;Outer LET: ~a~%&quot;</span> x)    <span class="comment">; | |&lt;---- x is 2</span></span><br><span class="line">    (<span class="name">let</span> ((<span class="name">x</span> <span class="number">3</span>))                      <span class="comment">; | |</span></span><br><span class="line">      (<span class="name">format</span> <span class="literal">t</span> <span class="string">&quot;Inner LET: ~a~%&quot;</span> x)) <span class="comment">; | | |&lt;-- x is 3</span></span><br><span class="line">    (<span class="name">format</span> <span class="literal">t</span> <span class="string">&quot;Outer LET: ~a~%&quot;</span> x))   <span class="comment">; | |</span></span><br><span class="line">  (<span class="name">format</span> <span class="literal">t</span> <span class="string">&quot;Parameter: ~a~%&quot;</span> x))     <span class="comment">; |</span></span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CL-USER&gt; (foo 1)</span><br><span class="line">参数：1</span><br><span class="line">外部 LET：2</span><br><span class="line">内部 LET：3</span><br><span class="line">外部 LET：2</span><br><span class="line">参数：1 </span><br><span class="line">NIL</span><br></pre></td></tr></table></figure><p>另一种绑定形式是let的变体let*, 变量名let只能用在变量列表后面的LET部分的主体中，而在lets中，每个变量的初值形式可以引用前面声明的变量</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;这是对的&quot;</span></span><br><span class="line">(<span class="name">let*</span> ((<span class="name">x</span> <span class="number">10</span>)</span><br><span class="line">       (<span class="name">y</span> (<span class="name">+</span> x <span class="number">10</span>)))</span><br><span class="line">  (<span class="name">list</span> x y))</span><br></pre></td></tr></table></figure><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;错误:&quot;</span></span><br><span class="line">(<span class="name">let</span> ((<span class="name">x</span> <span class="number">10</span>)</span><br><span class="line">      (<span class="name">y</span> (<span class="name">+</span> x <span class="number">10</span>)))</span><br><span class="line">  (<span class="name">list</span> x y))</span><br></pre></td></tr></table></figure><h2 id="词法变量和闭包"><a href="#词法变量和闭包" class="headerlink" title="词法变量和闭包"></a>词法变量和闭包</h2><p>看这个例子</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">let</span> ((<span class="name">count</span> <span class="number">0</span>)) #&#x27;(lambda () (setf count (<span class="number">1</span>+ count))))</span><br></pre></td></tr></table></figure><p>根据词汇范围的规则，表格内部的引用LAMBDA应该是合法的。然而，包含引用的匿名函数将作为表单的值返回，并且可以通过funcall调用<br>那么会发生什么？事实证明，当count是一个词法变量，它可以正常工作。count控制流进入表单时创建的绑定LET将根据需要持续存在，在这种情况下，只要有人持有对LET表单返回的函数对象的引用。匿名函数称为闭包，因为它“关闭”了let的作用域限制.<br>理解闭包的关键在于捕获的是绑定，而不是变量的值。因此，闭包不仅可以访问它关闭的变量的值，还可以分配新的值，这些值将在对闭包的调用之间持续存在。例如，您可以在全局变量中捕获由前一个表达式创建的闭包，如下所示：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defparameter</span> *fn* (<span class="name">let</span> ((<span class="name">count</span> <span class="number">0</span>)) #&#x27;(lambda () (setf count (<span class="number">1</span>+ count)))))</span><br></pre></td></tr></table></figure><h2 id="动态，又名特殊，变量"><a href="#动态，又名特殊，变量" class="headerlink" title="动态，又名特殊，变量"></a>动态，又名特殊，变量</h2><p>词法范围绑定通过字面限制给定名称具有含义的范围来帮助保持代码的可理解性。这就是大多数现代语言对局部变量使用词法作用域的原因。然而，有时你真的想要一个全局变量——一个你可以在程序的任何地方引用的变量。虽然不加选择地使用全局变量确实可以将代码变成意大利面条，几乎与无限制地使用goto无异。稍后您会看到，Lisp 版本的全局变量，即动态变量，更有用也更易于管理<br>Common Lisp 提供了两种创建全局变量的方法：DEFVAR和DEFPARAMETER.两种形式都采用变名、初始值和可选的文档字符串。在定义DEFVAR或DEFPARAMETER之后，该名称可以在任何地方使用来引用全局变量的当前绑定。正如您在前几章中看到的，全局变量通常以以*开头和结尾的名称命名。您将在本节后面看到为什么遵循该命名约定非常重要。DEFVAR和DEFPARAMETER看起来像这样：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defvar</span> *count* <span class="number">0</span></span><br><span class="line">  <span class="string">&quot;截至目前制造的部件数量&quot;</span>)</span><br><span class="line"></span><br><span class="line">(<span class="name">defparameter</span> *gap-tolerance* <span class="number">0.001</span></span><br><span class="line">  <span class="string">&quot;部件之间允许的公差&quot;</span>)</span><br></pre></td></tr></table></figure><p>两种形式之间的区别在于，DEFPARAMETER总是将初始值分配给命名变量，而DEFVAR只有在变量未定义时才这样做。DEFVAR也可以使用没有初始值的表单来定义全局变量而不给它一个值。这样的变量被称为是未绑定的。</p><p>实际上，您应该使用DEFVAR定义变量，这些变量将包含您想要保留的数据，即使您对使用该变量的源代码进行了更改。例如，假设前面定义的两个变量是用于控制小部件工厂的应用程序的一部分。定义 <em>count</em>变量 with是合适的，DEFVAR因为到目前为止制作的小部件数量不会因为您对小部件制作代码进行了一些更改而无效。(意思就是，defvar定义之后无法改变，而defparameter定义的是可变的，类似常量和变量)</p><p>另一方面，变量*<em>gap-tolerance</em>*可能对小部件制作代码本身的行为有一些影响。如果您决定需要更严格或更宽松的容差并更改DEFPARAMETER表单中的值，您希望更改在重新编译和重新加载文件时生效。</p><p>用DEFVAR或DEFPARAMETER定义变量后，您可以从任何地方引用它。例如，您可以定义此函数来增加制作的小部件的数量：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> increment-widget-count () (<span class="name">incf</span> *count*))</span><br></pre></td></tr></table></figure><p>全局变量的优点是您不必传递它们。大多数语言正是出于这个原因将标准输入和输出流存储在全局变量中——你永远不知道什么时候想要将某些东西打印到标准输出，并且你不希望每个函数都必须接受并传递包含这些流的参数，以防万一有人需要它们。</p><p>但是，一旦某个值（例如标准输出流）存储在全局变量中，并且您编写了引用该全局变量的代码，很容易尝试通过更改变量的值来临时修改该代码的行为。</p><p>例如，假设您正在处理一个包含一些低级日志记录函数的程序，这些函数会打印到全局变量中的流中*<em>standard-output</em>*。现在假设在程序的一部分中，您希望将这些函数生成的所有输出捕获到一个文件中。您可以打开一个文件并将生成的流分配给*<em>standard-output</em>*. 现在低级函数会将它们的输出发送到文件中。</p><p>这可以正常工作，直到您在完成后忘记设置*<em>standard-output</em>*回原始流。如果您忘记重置 *<em>standard-output</em>*，程序中使用的所有其他代码 *<em>standard-output</em>*也会将其输出发送到文件。</p><p>你真正想要的似乎是一种将一段代码包装成这样的方式，“这里的所有代码——它调用的所有函数，它们调用的所有函数，等等，一直到最低的——级别函数——应该将此值用于全局变量*<em>standard-output</em>*。” 那么当高层函数返回时，*<em>standard-output</em>*应该会自动恢复旧的值。</p><p>事实证明，这正是 Common Lisp 的另一种变量——动态变量——让你做的事情。当您绑定动态变量时（例如，使用LET变量或函数参数），在进入绑定表单时创建的绑定将在绑定表单期间替换全局绑定。与只能在绑定表单的词法范围内被代码引用的词法绑定不同，动态绑定可以被绑定表单执行期间调用的任何代码引用。事实证明，所有全局变量实际上都是动态变量。</p><p>因此，如果您想暂时重新定义*<em>standard-output</em>*，方法就是简单地重新绑定它，例如，使用LET.</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">let</span> ((<span class="name">*standard-output*</span> *some-other-stream*)) </span><br><span class="line">  (<span class="name">stuff</span>))</span><br></pre></td></tr></table></figure><p>在由于调用stuff而运行的任何代码中，对*<em>standard-output</em>*的引用将使用由LET建立的绑定。当stuff返回和控制离开 时LET，新的绑定消失，后续的引用将看到之前的绑定。在任何给定时间，最近建立的绑定都会影响所有其他绑定。从概念上讲，给定动态变量的每个新绑定都被推送到该变量的绑定堆栈中，并且对该变量的引用始终使用最新的绑定。当绑定表单返回时，它们创建的绑定会从堆栈中弹出，从而暴露以前的绑定。</p><p>一个简单的例子展示了它是如何工作的。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defvar</span> *x* <span class="number">10</span>) </span><br><span class="line">(<span class="name">defun</span> foo () (格式 <span class="literal">t</span> <span class="string">&quot;X: ~d~%&quot;</span> *x*))</span><br></pre></td></tr></table></figure><p>defvar为值为10的变量*<em>x</em>*创建一个全局绑定。在函数foo中对*<em>x</em>*的引用将动态查找当前绑定。如果您从顶层调用，由defvar创建的全局绑定是唯一可用的绑定，因此它会打印10。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CL-USER&gt; (foo)</span><br><span class="line">X: 10</span><br><span class="line">NIL</span><br></pre></td></tr></table></figure><p>但是您可以使用LET来创建一个临时隐藏全局绑定的新绑定，并foo打印不同的值。(哔哔哔哔那么多就是说let内部变量暂时覆盖全局变量的意思呗)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CL-USER&gt; (<span class="built_in">let</span> ((*x* 20)) (foo)) </span><br><span class="line">X: 20 </span><br><span class="line">NIL</span><br></pre></td></tr></table></figure><p>现在foo再次调用LET，将再次看到全局绑定。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CL-USER&gt; (foo) </span><br><span class="line">X: 10 </span><br><span class="line">NIL</span><br></pre></td></tr></table></figure><p>现在定义另一个函数。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> bar () </span><br><span class="line">  (<span class="name">foo</span>) </span><br><span class="line">  (<span class="name">let</span> ((<span class="name">*x*</span> <span class="number">20</span>)) (<span class="name">foo</span>)) </span><br><span class="line">  (<span class="name">foo</span>))</span><br></pre></td></tr></table></figure><p>请注意，中间调用foo包含在LET绑定**x**到新值 20 的 a 中。运行时bar，您会得到以下结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CL-USER&gt; (bar) </span><br><span class="line">X: 10 </span><br><span class="line">X: 20 </span><br><span class="line">X: 10 </span><br><span class="line">NIL</span><br></pre></td></tr></table></figure><p>如您所见，第一次调用foo看到全局绑定，其值为 10。然而，中间调用看到新绑定，值为20。但在LET之后调用foo，再次看到全局绑定。</p><p>与词法绑定一样，分配新值仅影响当前绑定。要查看这一点，您可以重新定义foo以包含对**x**的分配。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> foo ()</span><br><span class="line">  (<span class="name">format</span> <span class="literal">t</span> <span class="string">&quot;Before assignment~18tX: ~d~%&quot;</span> *x*) </span><br><span class="line">  (<span class="name">setf</span> *x* (<span class="name">+</span> <span class="number">1</span> *x*)) </span><br><span class="line">  (<span class="name">format</span> <span class="literal">t</span> <span class="string">&quot;After assignment~18tX: ~d~%&quot;</span> *X*))</span><br></pre></td></tr></table></figure><p>现在foo打印*<em>x</em>*的值，将其递增，然后再次打印。如果你只是运行foo，你会看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">CL-USER&gt; (foo)</span><br><span class="line">Before assignment X: 10</span><br><span class="line">After assignment  X: 11</span><br><span class="line">NIL</span><br></pre></td></tr></table></figure><p>不会太让人惊讶，接下来运行bar</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CL-USER&gt; (bar)</span><br><span class="line">Before assignment X: 11</span><br><span class="line">After assignment  X: 12</span><br><span class="line">Before assignment X: 20</span><br><span class="line">After assignment  X: 21</span><br><span class="line">Before assignment X: 12</span><br><span class="line">After assignment  X: 13</span><br><span class="line">NIL</span><br></pre></td></tr></table></figure><p>请注意，*<em>x</em>*从 11 开始——之前的调用foo 确实改变了全局值。第一次调用foofrom bar将全局绑定增加到 12。中间调用看不到全局绑定，因为LET. 然后最后一次调用可以再次看到全局绑定并将其从12增加到 13</p><p>那么这是如何工作的呢？如何LET知道绑定 *<em>x</em>*时应该创建动态绑定而不是正常的词法绑定？它知道是因为名称已被特殊声明。DEFVAR和DEFPARAMETER使用和定义的每个变量的名称自动声明为全局特殊的。这意味着每当您在绑定表单中使用这样的名称时——在LET或函数参数中或任何其他创建新变量绑定的构造中——所创建的绑定将是动态绑定。这就是为什么命名方式*<em>命名</em>*, *<em>convention</em>*非常重要——如果您为您认为是词法变量的名称使用名称并且该变量恰好是全局特殊的，那将是个坏消息。一方面，您调用的代码可能会从您下面更改绑定的值；另一方面，您可能正在隐藏由堆栈上更高层的代码建立的绑定。如果您始终根据*命名约定命名全局变量，您将永远不会意外地在打算建立词法绑定的地方使用动态绑定。</p><p>也可以在本地声明一个特殊的名称。如果在绑定形式中声明了一个特殊的名称，那么为该变量创建的绑定将是动态的而不是词法的。其他代码可以在本地声明一个特殊的名称以引用动态绑定。但是，局部特殊变量相对较少，因此您不必担心它们。</p><p>动态绑定使全局变量更易于管理，但重要的是要注意它们仍然允许远距离操作。绑定一个全局变量有两个远距离的影响——它可以改变下游代码的行为，它也开启了下游代码将一个新值分配给在堆栈上建立的绑定的可能性。只有当您需要利用这些特性中的一个或两个时，才应该使用动态变量。</p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>我根本没有提到的另一种变量是矛盾的“常量变量”。所有常量都是全局的，并用DEFCONSTANT定义。DEFCONSTANT的基本形式类似DEFPARAMETER。<br>DEFCONSTANT定义如下:</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defconstant</span> 常量名 初始值 [文档字符串])</span><br></pre></td></tr></table></figure><p>与DEFVAR和DEFPARAMETER一样，DEFCONSTANT对使用的名称有全局影响——此后名称只能用于引用常量；它不能用作函数参数或与任何其他绑定形式反弹。因此，许多Lisp程序员遵循使用以 +开头和结尾的名称的命名约定 。与全局特殊名称的 *约定相比，该约定不太普遍，但出于同样的原因，它是一个好主意。</p><h2 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h2><p>创建绑定后，您可以使用它做两件事：获取当前值并将其设置为新值。一个符号的计算结果是它命名的变量的值，所以你可以通过引用变量来获得当前值。要将新值分配给绑定，请使用SETF宏，即 Common Lisp 的通用赋值运算符。的基本形式SETF如下：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> 位置 值)</span><br></pre></td></tr></table></figure><p>因为SETF它是一个宏，所以它可以检查它所分配的 位置的形式，并扩展为适当的较低级别的操作来操作该位置。当place是变量时，它会扩展为对特殊运算符的调用SETQ，作为特殊运算符，它可以访问词法绑定和动态绑定。15例如，要将值 10 分配给变量 x，您可以这样写：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> x <span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>正如我之前所讨论的，为绑定分配新值不会影响该变量的任何其他绑定。并且它对分配之前存储在绑定中的值没有任何影响。因此，SETF在这个函数中的setf：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">defun</span> foo (<span class="name">x</span>) (<span class="name">setf</span> x <span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>对foo之外的任何值都没有影响。调用时创建的绑定foo设置为10，立即替换作为参数传递的任何值。尤其是如下形式：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">let</span> ((<span class="name">y</span> <span class="number">20</span>)) </span><br><span class="line">  (<span class="name">foo</span> y) </span><br><span class="line">    (<span class="name">print</span> y))</span><br></pre></td></tr></table></figure><p>将打印20，而不是10，因为它是y传递给foo的值，在foo给x一个新值之前的x的变量值。</p><p>SETF也可以按顺序分配到多个地方。例如，而不是以下内容：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> x <span class="number">1</span>) </span><br><span class="line">(<span class="name">setf</span> y <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>你可以这样写：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> x <span class="number">1</span> y <span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>SETF返回新分配的值，因此您还可以嵌套调用，SETF如下面的表达式，它同时分配给xy相同y的随机值：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> x (<span class="name">setf</span> y (<span class="name">random</span> <span class="number">10</span>)))</span><br></pre></td></tr></table></figure><h2 id="广义分配"><a href="#广义分配" class="headerlink" title="广义分配"></a>广义分配</h2><p>当然，变量绑定并不是唯一可以保存值的地方。Common Lisp 支持复合数据结构，例如数组、哈希表和列表，以及用户定义的数据结构，所有这些都由多个位置组成，每个位置都可以保存一个值。</p><p>我将在以后的章节中介绍这些数据结构，但是当我们讨论赋值的主题时，你应该注意它SETF 可以为任何地方赋值。当我介绍不同的复合数据结构时，我将指出哪些函数可以作为“SETF能用的地方”。然而，简短的版本是，如果您需要为一个地方分配一个值，SETF几乎可以肯定是要使用的工具。甚至可以扩展SETF以允许它分配给用户定义的位置，尽管我不会对此进行介绍。16</p><p>在这方面，与大多数 C 派生语言中SETF的赋值运算符没有什么不同。&#x3D;在这些语言中， &#x3D;运算符为变量、数组元素和类的字段分配新值。在 Perl 和 Python 等支持哈希表作为内置数据类型的语言中，&#x3D;还可以设置单个哈希表条目的值。表 6-1 总结了&#x3D;这些语言中使用的各种方式。</p><p>SETF以同样的方式工作——第一个“参数”SETF是存储值的地方，第二个参数提供值。与&#x3D;这些语言中的运算符一样，您使用与通常用于获取值相同的形式来表示位置。17因此，表 6-1 中赋值的 Lisp 等价物——假设它AREF是数组访问函数，GETHASH 执行哈希表查找，并且field可能是访问名为field用户定义对象的槽的函数——是如下：</p><p>简单变量：(setf x 10)<br>数组：(setf (aref a 0) 10)<br>哈希表：(setf (gethash ‘key hash) 10)<br>名为’field’的槽：(setf (field o) 10)<br>请注意，SETF作为较大对象一部分的 place 与 ing 变量具有相同的语义SETF：修改 place 对先前存储在该 place 中的对象没有任何影响。同样，这类似于&#x3D;Java、Perl 和 Python 中的行为方式。</p><h2 id="其他修改地点的方法"><a href="#其他修改地点的方法" class="headerlink" title="其他修改地点的方法"></a>其他修改地点的方法</h2><p>虽然所有赋值都可以用 表示SETF，但某些涉及基于当前值分配新值的模式非常普遍，足以保证它们自己的运算符。例如，虽然您可以使用 增加一个数字SETF，如下所示：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> x (<span class="name">+</span> x <span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>或减少它：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> x (<span class="name">-</span> x <span class="number">1</span>))</span><br></pre></td></tr></table></figure><p>与 C 风格++x和 –x. 相反，您可以使用宏INCF和DECF，它将位置增加和减少一定的数量，默认为 1。</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">incf</span> x) === (<span class="name">setf</span> x (<span class="name">+</span> x <span class="number">1</span>)) </span><br><span class="line">(<span class="name">decf</span> x) === (<span class="name">setf</span> x (<span class="name">-</span> x <span class="number">1</span>)) </span><br><span class="line">(<span class="name">incf</span> x <span class="number">10</span>) === (<span class="name">setf</span> x (<span class="name">+</span> x <span class="number">10</span>))</span><br></pre></td></tr></table></figure><p>INCF并且DECF是一种称为 修改宏的宏的示例。修改宏是建立在SETF 该修改位置之上的宏，方法是根据该位置的当前值分配一个新值。修改宏的主要好处是它们比使用SETF. 此外，修改宏的定义方式使它们可以安全地用于位置表达式必须只计算一次的地方。一个愚蠢的例子是这个表达式，它增加了数组的任意元素的值：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">incf</span> (<span class="name">aref</span> *array* (<span class="name">random</span> (<span class="name">length</span> *array*))))</span><br></pre></td></tr></table></figure><p>将其天真地翻译成SETF表达式可能如下所示:</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">setf</span> (<span class="name">aref</span> *array* (<span class="name">random</span> (<span class="name">length</span> *array*)))</span><br><span class="line">  (<span class="number">1</span>+ (<span class="name">aref</span> *array* (<span class="name">random</span> (<span class="name">length</span> *array*)))))</span><br></pre></td></tr></table></figure><p>但是，这不起作用，因为两次调用RANDOM不一定会返回相同的值——这个表达式可能会获取数组中一个元素的值，将其递增，然后将其作为 a 的新值存储回来不同的元素。然而，这个INCF 表达式做正确的事，因为它知道如何拆开这个表达式：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">aref</span> *array* (<span class="name">random</span> (<span class="name">length</span> *array*)))</span><br></pre></td></tr></table></figure><p>抽出可能有副作用的部分，以确保它们只被评估一次。在这种情况下，它可能会扩展为或多或少等同于以下内容：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">let</span> ((<span class="name">tmp</span> (<span class="name">random</span> (<span class="name">length</span> *array*))))</span><br><span class="line">  (<span class="name">setf</span> (<span class="name">aref</span> *array* tmp) (<span class="number">1</span>+ (<span class="name">aref</span> *array* tmp))))</span><br></pre></td></tr></table></figure><p>一般来说，modify 宏保证对它们的参数和 place 形式的子形式都只求值一次，从左到右的顺序。</p><p>PUSH您在迷你数据库中用于向<em>db</em>变量添加元素的宏是另一个修改宏。当我在第 12 章讨论列表如何在 Lisp 中表示时，您将更仔细地了解它及其对应物POP和 工作原理。PUSHNEW</p><p>最后，两个稍微深奥但有用的修改宏是 ROTATEF和SHIFTF。ROTATEF在位置之间旋转值。例如，如果您有两个变量a和 b，则此调用：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">rotatef</span> ab)</span><br></pre></td></tr></table></figure><p>交换两个变量的值并返回NIL. 由于 aandb是变量，你不必担心副作用，前面的ROTATEF表达式等价于：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">let</span> ((<span class="name">tmp</span> a)) (<span class="name">setf</span> abb tmp) <span class="literal">nil</span>)</span><br></pre></td></tr></table></figure><p>对于其他类型的地方，等价的表达式 usingSETF 会复杂得多。</p><p>SHIFTF是相似的，除了它不是旋转值而是将它们向左移动——最后一个参数提供了一个移动到倒数第二个参数的值，而其余的值向左移动了一个。简单地返回第一个参数的原始值。因此，以下内容：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">shiftf</span> ab <span class="number">10</span>)</span><br></pre></td></tr></table></figure><p>是等价的——同样，因为你不必担心副作用——到这个：</p><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="name">let</span> ((<span class="name">tmp</span> a)) (<span class="name">setf</span> abb <span class="number">10</span>) tmp)</span><br></pre></td></tr></table></figure><p>两者ROTATEF和SHIFTF都可以与任意数量的参数一起使用，并且像所有修改宏一样，保证按从左到右的顺序只对它们进行一次评估。</p><p>掌握了 Common Lisp 的函数和变量的基础知识，现在您已准备好继续学习使 Lisp 与其他语言区分开来的特性：宏。</p>]]></content>
      
      
      
        <tags>
            
            <tag> lisp </tag>
            
            <tag> programming </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>突发奇想</title>
      <link href="/2022/08/11/%E7%AA%81%E5%8F%91%E5%A5%87%E6%83%B3/"/>
      <url>/2022/08/11/%E7%AA%81%E5%8F%91%E5%A5%87%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id=""><a href="#" class="headerlink" title=""></a></h1><p>———看不见 看不见 看不见 ———</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *                             _ooOoo_</span></span><br><span class="line"><span class="comment"> *                            o8888888o</span></span><br><span class="line"><span class="comment"> *                            88&quot; . &quot;88</span></span><br><span class="line"><span class="comment"> *                            (| -_- |)</span></span><br><span class="line"><span class="comment"> *                            O\  =  /O</span></span><br><span class="line"><span class="comment"> *                         ____/`---&#x27;\____</span></span><br><span class="line"><span class="comment"> *                       .&#x27;  \\|     |//  `.</span></span><br><span class="line"><span class="comment"> *                      /  \\|||  :  |||//  \</span></span><br><span class="line"><span class="comment"> *                     /  _||||| -:- |||||-  \</span></span><br><span class="line"><span class="comment"> *                     |   | \\\  -  /// |   |</span></span><br><span class="line"><span class="comment"> *                     | \_|  &#x27;&#x27;\---/&#x27;&#x27;  |   |</span></span><br><span class="line"><span class="comment"> *                     \  .-\__  `-`  ___/-. /</span></span><br><span class="line"><span class="comment"> *                   ___`. .&#x27;  /--.--\  `. . __</span></span><br><span class="line"><span class="comment"> *                .&quot;&quot; &#x27;&lt;  `.___\_&lt;|&gt;_/___.&#x27;  &gt;&#x27;&quot;&quot;.</span></span><br><span class="line"><span class="comment"> *               | | :  `- \`.;`\ _ /`;.`/ - ` : | |</span></span><br><span class="line"><span class="comment"> *               \  \ `-.   \_ __\ /__ _/   .-` /  /</span></span><br><span class="line"><span class="comment"> *          ======`-.____`-.___\_____/___.-`____.-&#x27;======</span></span><br><span class="line"><span class="comment"> *                             `=---=&#x27;</span></span><br><span class="line"><span class="comment"> *          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</span></span><br><span class="line"><span class="comment"> *                     佛祖保佑        永无BUG</span></span><br><span class="line"><span class="comment"> *            佛曰:</span></span><br><span class="line"><span class="comment"> *                   写字楼里写字间，写字间里程序员；</span></span><br><span class="line"><span class="comment"> *                   程序人员写程序，又拿程序换酒钱。</span></span><br><span class="line"><span class="comment"> *                   酒醒只在网上坐，酒醉还来网下眠；</span></span><br><span class="line"><span class="comment"> *                   酒醉酒醒日复日，网上网下年复年。</span></span><br><span class="line"><span class="comment"> *                   但愿老死电脑间，不愿鞠躬老板前；</span></span><br><span class="line"><span class="comment"> *                   奔驰宝马贵者趣，公交自行程序员。</span></span><br><span class="line"><span class="comment"> *                   别人笑我忒疯癫，我笑自己命太贱；</span></span><br><span class="line"><span class="comment"> *                   不见满街漂亮妹，哪个归得程序员？</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>lisp代码第一个字符是什么 <span class="hide-inline"><button type="button" class="hide-button" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">是一个(</span></span></p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lisp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>猜词游戏</title>
      <link href="/2022/08/11/%E7%8C%9C%E8%AF%8D%E6%B8%B8%E6%88%8F/"/>
      <url>/2022/08/11/%E7%8C%9C%E8%AF%8D%E6%B8%B8%E6%88%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在家没事，写了个小游戏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">猜数词游戏-1.0</span></span><br><span class="line"><span class="string">author: HomesIII</span></span><br><span class="line"><span class="string">字典目录[dictionary_path]</span></span><br><span class="line"><span class="string">字典格式:</span></span><br><span class="line"><span class="string">    word explain(中文等双字节字符)</span></span><br><span class="line"><span class="string">    word explain(中文等双字节字符)</span></span><br><span class="line"><span class="string">    ...  ...</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> sys <span class="keyword">import</span> exit <span class="keyword">as</span> s_exit</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint</span><br><span class="line"></span><br><span class="line">errors = <span class="number">0</span></span><br><span class="line"><span class="comment"># 用字典目录替换这个</span></span><br><span class="line">dictionary_path = <span class="string">&#x27;[dictionary_path]&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choose_word</span>():</span><br><span class="line">    wd = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">global</span> errors <span class="comment"># 统计错误，防止递归过深</span></span><br><span class="line">    line_counter = <span class="number">0</span> <span class="comment">#行数</span></span><br><span class="line">    counter = <span class="number">0</span> <span class="comment">#目标词所在行，用random.randint生成</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(dictionary_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            <span class="keyword">for</span> _ <span class="keyword">in</span> f:</span><br><span class="line">                line_counter += <span class="number">1</span></span><br><span class="line">            line = randint(<span class="number">1</span>, line_counter)</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(dictionary_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            <span class="keyword">for</span> w <span class="keyword">in</span> file:</span><br><span class="line">                counter += <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> counter == line:</span><br><span class="line">                    wd = w.strip()</span><br><span class="line">    <span class="keyword">except</span> FileNotFoundError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;无法打开指定的文件!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> LookupError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;指定了未知的编码!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;读取文件时解码错误!&#x27;</span>)</span><br><span class="line">    <span class="keyword">except</span> IOError:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;读写文件时出现错误.&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        words = re.search(<span class="string">r&#x27;(\w*\s?\w*)(?=\s)&#x27;</span>, wd).group(<span class="number">0</span>)</span><br><span class="line">        explains = re.search(<span class="string">r&#x27;(?&lt;=\s)[^\x00-\xff]+&#x27;</span>, wd).group(<span class="number">0</span>)</span><br><span class="line">        <span class="comment"># 判断wd是否为空，若为空则递归调用choose_word</span></span><br><span class="line">        <span class="comment"># 若字典格式错误，words, explains 为空也会报错</span></span><br><span class="line">        <span class="keyword">return</span> words, explains</span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        errors += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> errors == <span class="number">10</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;文件错误过多, 已停止递归&#x27;</span>)</span><br><span class="line">            s_exit()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;第<span class="subst">&#123;line&#125;</span>行: :<span class="subst">&#123;wd&#125;</span>: 格式错误&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;正确格式: 单词 解释&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> choose_word()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;这是一个回合制猜词游戏.按.h显示帮助&quot;</span>)</span><br><span class="line">i = <span class="built_in">input</span>(<span class="string">&quot;回车开始&quot;</span>)</span><br><span class="line">round_ = <span class="number">0</span> <span class="comment">#回合数</span></span><br><span class="line">tip_rule = <span class="number">0</span> <span class="comment"># 提示频率(猜几次提示一次)</span></span><br><span class="line">auto_play = <span class="literal">False</span></span><br><span class="line">sleep_time = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> i:</span><br><span class="line">    word, explain = choose_word()<span class="comment">#选词</span></span><br><span class="line">    round_ += <span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;-------第<span class="subst">&#123;round_&#125;</span>回合--------&#x27;</span>)</span><br><span class="line">    display_num = <span class="number">1</span> <span class="comment"># 展示的字母数量</span></span><br><span class="line">    time = <span class="number">0</span> <span class="comment"># 猜的次数, 可以设置提示频率</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> (ipt := <span class="built_in">input</span>(<span class="string">f&quot;这个单词以<span class="subst">&#123;word[:display_num]&#125;</span>开头: &quot;</span>)) <span class="keyword">or</span> ipt[:<span class="number">2</span>] != <span class="string">&#x27;.q&#x27;</span>:</span><br><span class="line">        time += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> ipt == <span class="string">&#x27;.h&#x27;</span>:</span><br><span class="line">            time -= <span class="number">1</span> <span class="comment">#每次使用特殊命令, 猜的次数减一(特殊命令不计入猜测次数)</span></span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;------帮助-------&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;.h   ---帮助&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;.q   ---退出&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;.t   ---提示&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;.l   ---提示单词长度&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;.g   ---放弃&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;.s   ---设置&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;         |_学习模式自动进入下一个&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;         |_自动学习模式间隔时间&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;         |_自动提示频率&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;.k   ---学习&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line">        <span class="keyword">elif</span> ipt == word:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;猜对啦&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(word + <span class="string">&#x27;, &#x27;</span>+explain)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> ipt == <span class="string">&#x27;.t&#x27;</span>:</span><br><span class="line">            time -= <span class="number">1</span></span><br><span class="line">            display_num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> display_num == <span class="built_in">len</span>(word):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;这个单词是&#x27;</span> + word + <span class="string">&#x27;!&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;解析: &#x27;</span> + explain)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">elif</span> ipt == <span class="string">&#x27;.l&#x27;</span>:</span><br><span class="line">            time -= <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;这个单词有<span class="subst">&#123;<span class="built_in">len</span>(word)&#125;</span>个字母&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> ipt == <span class="string">&#x27;.s&#x27;</span>:</span><br><span class="line">            time -= <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;1 ---学习模式自动进入下一个(<span class="subst">&#123;<span class="built_in">str</span>(auto_play)&#125;</span>)&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;2 ---自动学习模式间隔时间(<span class="subst">&#123;sleep_time&#125;</span>秒)&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;3 ---提示频率(<span class="subst">&#123;tip_rule&#125;</span>)&#x27;</span>)</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line">            choose = <span class="built_in">input</span>(<span class="string">&#x27;选择设置项(1/2/3): &#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> choose == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                auto_play = <span class="keyword">not</span> auto_play <span class="comment"># 旧版实现: input(&#x27;学习模式自动进入下一个[(y)/n]&#x27;) != &#x27;n&#x27;</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;设置成功, 间隔时间:&#x27;</span>, sleep_time, <span class="string">&#x27;秒&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> choose == <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                conti = <span class="literal">True</span></span><br><span class="line">                <span class="keyword">while</span> conti:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        user_sleep = <span class="built_in">input</span>(<span class="string">&#x27;自动学习模式间隔时间(秒): &#x27;</span>)</span><br><span class="line">                        <span class="keyword">if</span> <span class="keyword">not</span> user_sleep:</span><br><span class="line">                            <span class="built_in">print</span>(<span class="string">&#x27;已取消&#x27;</span>)</span><br><span class="line">                            <span class="keyword">break</span></span><br><span class="line">                        sleep_time = <span class="built_in">float</span>(user_sleep)</span><br><span class="line">                        conti = <span class="literal">False</span></span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;设置成功, 间隔时间:&#x27;</span>, sleep_time, <span class="string">&#x27;秒&#x27;</span>)</span><br><span class="line">                    <span class="keyword">except</span> Exception:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;请输入数字&#x27;</span>)</span><br><span class="line">            <span class="keyword">elif</span> choose == <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                tip = tip_rule</span><br><span class="line">                <span class="keyword">while</span> tip == tip_rule:</span><br><span class="line">                    rule = <span class="built_in">input</span>(<span class="string">&#x27;设置提示频率(默认不自动提示): &#x27;</span>) <span class="keyword">if</span> tip_rule == <span class="number">0</span> <span class="keyword">else</span> <span class="built_in">input</span>(<span class="string">f&#x27;设置提示频率(猜<span class="subst">&#123;tip_rule&#125;</span>次提示一次): &#x27;</span>)</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> rule:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&quot;已取消&quot;</span>)</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="built_in">int</span>(rule)</span><br><span class="line">                    <span class="keyword">except</span> Exception:</span><br><span class="line">                        <span class="built_in">print</span>(<span class="string">&#x27;请输入数字, 回车取消&#x27;</span>)</span><br><span class="line">                        <span class="keyword">continue</span></span><br><span class="line">                    tip_rule = <span class="built_in">int</span>(rule)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;设置成功&quot;</span>)</span><br><span class="line">                    <span class="keyword">break</span> <span class="comment"># break是为了避免用户重复设置同一值的时候进入死循环一直提示输入(虽然回车可以取消)</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;取消.&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> ipt == <span class="string">&#x27;.g&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;加油⛽, 这个单词是<span class="subst">&#123;word&#125;</span>, &#x27;</span> + explain)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> ipt == <span class="string">&#x27;.k&#x27;</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;-----学习模式-----&#x27;</span>)</span><br><span class="line">            <span class="built_in">input</span>(<span class="string">&#x27;回车键继续&#x27;</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">with</span> <span class="built_in">open</span>(dictionary_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> reader:</span><br><span class="line">                    <span class="keyword">for</span> lines <span class="keyword">in</span> reader:</span><br><span class="line">                        <span class="built_in">print</span>(lines, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                        <span class="keyword">if</span> auto_play:</span><br><span class="line">                            sleep(sleep_time)</span><br><span class="line">                            <span class="keyword">continue</span></span><br><span class="line">                        <span class="built_in">input</span>()</span><br><span class="line">                    <span class="built_in">print</span>()</span><br><span class="line">                        </span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;文件读写错误&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;异常信息: \n&#x27;</span>, e)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;猜错了&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> tip_rule != <span class="number">0</span> <span class="keyword">and</span> time != <span class="number">0</span> <span class="keyword">and</span> time % tip_rule == <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>()</span><br><span class="line">            display_num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> display_num == <span class="built_in">len</span>(word):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;这个单词是&#x27;</span> + word + <span class="string">&#x27;!\n解析: explain&#x27;</span>)</span><br><span class="line">                <span class="keyword">break</span> <span class="comment"># 提示单词加一后立即判断是否猜出, 若未猜出，再输出提示</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;提示:\n这个单词以<span class="subst">&#123;word[:display_num]&#125;</span>开头&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        s_exit() <span class="keyword">if</span> <span class="built_in">input</span>(<span class="string">&#x27;退出?[(y)/n]&#x27;</span>) <span class="keyword">in</span> <span class="string">&#x27;Yy\n&#x27;</span> <span class="keyword">else</span> <span class="literal">None</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;退出......&quot;</span>)</span><br><span class="line">    s_exit()</span><br><span class="line">    </span><br></pre></td></tr></table></figure><p>词典（网上搜的）</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br></pre></td><td class="code"><pre><span class="line">coast 海岸</span><br><span class="line">side 一边</span><br><span class="line">beach 海滩</span><br><span class="line">central 在中心的</span><br><span class="line">crop 庄稼</span><br><span class="line">scenic 景色优美的</span><br><span class="line">queen 女王</span><br><span class="line">castle 城堡</span><br><span class="line">wine 葡萄酒</span><br><span class="line">culture 文化</span><br><span class="line">concert 音乐会</span><br><span class="line">wonderful 令人赞叹的</span><br><span class="line">harbour 港湾</span><br><span class="line">cable car 电缆车</span><br><span class="line">delicious 美味的</span><br><span class="line">restaurant 餐厅</span><br><span class="line">sunshine 阳光</span><br><span class="line">step 台阶</span><br><span class="line">amazing 令人惊奇的</span><br><span class="line">parachute 降落伞</span><br><span class="line">hometown 家乡</span><br><span class="line">crowded 拥挤的</span><br><span class="line">somewhere 在某处</span><br><span class="line">tuk-tuk 小车</span><br><span class="line">wheel 车轮</span><br><span class="line">fresh 新鲜的</span><br><span class="line">abroad 在国外</span><br><span class="line">relative 亲戚</span><br><span class="line">relax 放松</span><br><span class="line">send 寄</span><br><span class="line">postcard 明信片</span><br><span class="line">tennis 网球</span><br><span class="line">court 球场</span><br><span class="line">waterfall 瀑布</span><br><span class="line">camp 营地</span><br><span class="line">interview 采访</span><br><span class="line">natural 自然的</span><br><span class="line">air conditioner 空调</span><br><span class="line">insect 昆虫</span><br><span class="line">warn 警告</span><br><span class="line">join 加入</span><br><span class="line">root 根</span><br><span class="line">pass 给</span><br><span class="line">communicate 交流</span><br><span class="line">danger 危险</span><br><span class="line">burn （使）烧毁</span><br><span class="line">destroy 摧毁</span><br><span class="line">pollution 污染</span><br><span class="line">fighter 奋斗者</span><br><span class="line">article 文章</span><br><span class="line">rubbish 垃圾</span><br><span class="line">noise 噪声</span><br><span class="line">without 没有</span><br><span class="line">reason 原因</span><br><span class="line">alive 活着的</span><br><span class="line">above 在……上面</span><br><span class="line">childhood 童年</span><br><span class="line">disappear 消失</span><br><span class="line">waste 浪费</span><br><span class="line">seem 似乎</span><br><span class="line">result 结果</span><br><span class="line">produce 生产</span><br><span class="line">gas 气体</span><br><span class="line">leisure 休闲</span><br><span class="line">area 地方</span><br><span class="line">container 容器</span><br><span class="line">reception 接待处</span><br><span class="line">clerk 职员</span><br><span class="line">blind 瞎的</span><br><span class="line">explain 解释</span><br><span class="line">lead 带路</span><br><span class="line">exit 出口</span><br><span class="line">safety 安全</span><br><span class="line">describe 描述</span><br><span class="line">asleep 睡着的</span><br><span class="line">bark 吠叫</span><br><span class="line">loudly 大声地</span><br><span class="line">smell 闻到</span><br><span class="line">smoke 烟</span><br><span class="line">fire alarm 火警</span><br><span class="line">towel 毛巾</span><br><span class="line">dead 不运行的</span><br><span class="line">minute 分钟</span><br><span class="line">fire engine 消防车</span><br><span class="line">against 反对</span><br><span class="line">mostly 主要地</span><br><span class="line">perfume maker 香水制造者</span><br><span class="line">sense 感觉官能</span><br><span class="line">useful 有用的</span><br><span class="line">taste 味觉</span><br><span class="line">close 关闭</span><br><span class="line">programme 节目</span><br><span class="line">skill 技术</span><br><span class="line">hearing 听力</span><br><span class="line">sight 视力</span><br><span class="line">deaf 聋的</span><br><span class="line">simple 简单的</span><br><span class="line">able 能够</span><br><span class="line">chance 机会</span><br><span class="line">sign language 手语</span><br><span class="line">disability 缺陷</span><br><span class="line">wheelchair 轮椅</span><br><span class="line">left 左边</span><br><span class="line">opposite 在……对面</span><br><span class="line">cupboard 橱柜</span><br><span class="line">packet 小包装</span><br><span class="line">electricity 电</span><br><span class="line">fool 愚弄</span><br><span class="line">flow 流</span><br><span class="line">explanation 解释</span><br><span class="line">servant 仆人</span><br><span class="line">mankind 人类</span><br><span class="line">form 形式</span><br><span class="line">energy 能量</span><br><span class="line">bulb 电灯泡</span><br><span class="line">flat 公寓</span><br><span class="line">connect 与……相连接</span><br><span class="line">power station 发电厂</span><br><span class="line">battery 电池</span><br><span class="line">chemical 化学制品</span><br><span class="line">advice 忠告</span><br><span class="line">rice cooker 电饭煲</span><br><span class="line">pot 壶</span><br><span class="line">housewife 家庭主妇</span><br><span class="line">careful 小心的</span><br><span class="line">unplug 拔去</span><br><span class="line">microwave 微波炉</span><br><span class="line">heat 加热</span><br><span class="line">metal 金属</span><br><span class="line">kettle 水壶</span><br><span class="line">iron 熨</span><br><span class="line">move 移动</span><br><span class="line">screen 屏幕</span><br><span class="line">analogue television 模拟电视</span><br><span class="line">digital television 数字电视</span><br><span class="line">quality 质量</span><br><span class="line">cover 覆盖</span><br><span class="line">lock 锁上</span><br><span class="line">peephole 窥视孔</span><br><span class="line">test 测试</span><br><span class="line">lean 倾</span><br><span class="line">staff 职工</span><br><span class="line">customer 顾客</span><br><span class="line">properly 恰当地</span><br><span class="line">interesting 有趣</span><br><span class="line">mile 英里</span><br><span class="line">dull 无聊的</span><br><span class="line">lively 活泼的</span><br><span class="line">hate 讨厌</span><br><span class="line">bored 无聊的</span><br><span class="line">knock 敲</span><br><span class="line">whole 整个</span><br><span class="line">slam 砰地关上</span><br><span class="line">break （使）碎</span><br><span class="line">bite 咬</span><br><span class="line">ring 圈</span><br><span class="line">mess 肮脏</span><br><span class="line">din 吵闹声</span><br><span class="line">signal 信号</span><br><span class="line">typhoon 台风</span><br><span class="line">blow 吹</span><br><span class="line">tray hay 草</span><br><span class="line">narrator 旁白员</span><br><span class="line">present 礼物</span><br><span class="line">prize 奖赏</span><br><span class="line">sharp 锋利的</span><br><span class="line">boss 老</span><br><span class="line">trip 旅行</span><br><span class="line">continent 大陆</span><br><span class="line">parrot 鹦鹉</span><br><span class="line">skin 皮肤</span><br><span class="line">lizard 蜥蜴</span><br><span class="line">guide 向导</span><br><span class="line">cheerful 高兴地</span><br><span class="line">generous 大方的</span><br><span class="line">helpful 热心的</span><br><span class="line">successful 成功的</span><br><span class="line">patient 耐心的</span><br><span class="line">verse 诗</span><br><span class="line">tap 水龙头</span><br><span class="line">pour 涌入</span><br><span class="line">sink 水槽</span><br><span class="line">freeze （使）冻结</span><br><span class="line">drop 掉下</span><br><span class="line">stream 小河</span><br><span class="line">reservoir 水库</span><br><span class="line">journey 旅行</span><br><span class="line">treatment 处理</span><br><span class="line">works 工厂</span><br><span class="line">pipe 管</span><br><span class="line">until 直到……为止</span><br><span class="line">sewage （下水道）污水</span><br><span class="line">pump 用泵抽出或压入</span><br><span class="line">valuable 宝贵的</span><br><span class="line">liquid 液体的</span><br><span class="line">ocean 海洋</span><br><span class="line">salty 咸的</span><br><span class="line">drinkable 可饮用的</span><br><span class="line">litre 升</span><br><span class="line">oil 油</span><br><span class="line">broken 破损的</span><br><span class="line">flush 冲洗</span><br><span class="line">shower 淋浴</span><br><span class="line">mint 铸币厂</span><br><span class="line">distill 蒸馏</span><br><span class="line">mix 使混合</span><br><span class="line">steam 蒸汽</span><br><span class="line">powder 粉末</span><br><span class="line">ordinary 普通的</span><br><span class="line">owner 主人</span><br><span class="line">chart 图表</span><br><span class="line">process 过程</span><br><span class="line">chopstick 筷子</span><br><span class="line">dish 一道菜</span><br><span class="line">hostess 女主人</span><br><span class="line">spoon 勺</span><br><span class="line">smelly 难闻的</span><br><span class="line">separate 单独的</span><br><span class="line">several 几个</span><br><span class="line">sashimi 生鱼片</span><br><span class="line">raw 生的</span><br><span class="line">knife 刀</span><br><span class="line">fork 叉子</span><br><span class="line">roast 烤的</span><br><span class="line">popular 受欢迎的</span><br><span class="line">oolong tea 乌龙茶</span><br><span class="line">survey 民意调查</span><br><span class="line">bell 钟（声）</span><br><span class="line">biscuit 饼干</span><br><span class="line">steak 牛排</span><br><span class="line">waiter 侍者</span><br><span class="line">roller 旱冰鞋</span><br><span class="line">serve 服务</span><br><span class="line">speed 速度</span><br><span class="line">grape 葡萄</span><br><span class="line">paste 肉酱</span><br><span class="line">sauce 酱</span><br><span class="line">nut 坚果</span><br><span class="line">pepper 辣椒粉</span><br><span class="line">chilli 辣椒</span><br><span class="line">lemon 柠檬</span><br><span class="line">chocolate 巧克力</span><br><span class="line">mushroom 蘑菇</span><br><span class="line">prawn 对虾</span><br><span class="line">salad 色拉</span><br><span class="line">chop 猪排</span><br><span class="line">habit 习惯</span><br><span class="line">questionnaire 调查问卷</span><br><span class="line">colony 殖民地</span><br><span class="line">democracy 民主</span><br><span class="line">dynasty 王朝</span><br><span class="line">extinction 灭绝</span><br><span class="line">feudalism 封建</span><br><span class="line">administration 行政</span><br><span class="line">aggression 侵略</span><br><span class="line">ambassador 大使</span><br><span class="line">anarchy 无政府状态</span><br><span class="line">announcement 公告</span><br><span class="line">aristocracy 贵族</span><br><span class="line">autonomy 自治</span><br><span class="line">ballot 选票</span><br><span class="line">bill 账单</span><br><span class="line">bloodshed 流血</span><br><span class="line">bureaucracy 官僚</span><br><span class="line">candidate 候选人</span><br><span class="line">community 社区 </span><br><span class="line">compact 袖珍的（协议）</span><br><span class="line">congress 国会</span><br><span class="line">congressman 众议员</span><br><span class="line">constitution 宪法</span><br><span class="line">convention 惯例</span><br><span class="line">cooperation 合作</span><br><span class="line">custom 风俗</span><br><span class="line">delegate 代表</span><br><span class="line">delegation 代表团</span><br><span class="line">demonstration 示范</span><br><span class="line">deposition 沉积</span><br><span class="line">diplomacy 外交</span><br><span class="line">diplomat 外交官</span><br><span class="line">discrimination 歧视</span><br><span class="line">embassy 大使馆</span><br><span class="line">emperor 皇帝</span><br><span class="line">empire 帝国</span><br><span class="line">government 政府</span><br><span class="line">governor  州长</span><br><span class="line">movement 移动</span><br><span class="line">nationality 国籍</span><br><span class="line">policy 政策</span><br><span class="line">poll 轮询</span><br><span class="line">prejudice 偏见</span><br><span class="line">proposition 主张</span><br><span class="line">rebel 反叛</span><br><span class="line">rebellion 叛乱</span><br><span class="line">republic 共和国</span><br><span class="line">resolution 解析度</span><br><span class="line">slogan 口号</span><br><span class="line">spokesman 发言人</span><br><span class="line">statesman 政治家</span><br><span class="line">treaty 条约</span><br><span class="line">uprising 起义</span><br><span class="line">vote 投票</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> game </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次简单的python爬虫</title>
      <link href="/2022/08/11/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84python%E7%88%AC%E8%99%AB/"/>
      <url>/2022/08/11/%E8%AE%B0%E4%B8%80%E6%AC%A1%E7%AE%80%E5%8D%95%E7%9A%84python%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近在学lisp，<br>发现一本在线的lisp书籍:<br><a href="https://gigamonkeys.com/book/">Practical common lisp</a><br>手痒，于是乎:</p><h1 id="python爬取practical-common-lisp"><a href="#python爬取practical-common-lisp" class="headerlink" title="python爬取practical common lisp"></a>python爬取practical common lisp</h1><p>获取源代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">html = requests.get(<span class="string">&#x27;https://gigamonkeys.com/book/&#x27;</span>).text</span><br><span class="line"><span class="built_in">print</span>(html)</span><br></pre></td></tr></table></figure><p>输出:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Practical Common Lisp<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&#x27;stylesheet&#x27;</span> <span class="attr">type</span>=<span class="string">&#x27;text/css&#x27;</span> <span class="attr">href</span>=<span class="string">&#x27;style.css&#x27;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;script language=&quot;JavaScript&quot; src=&quot;http://www.gvisit.com/record.php?sid=f8af8124c8b07e7f044291fa5b28611b&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&#x27;text/css&#x27;</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">&lt;!--</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">BODY</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">1000px</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-family</span>: sans-serif;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: .<span class="number">5in</span> auto;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-class">.INTRO</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>: <span class="number">11pt</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">TD</span><span class="selector-class">.NEWS</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">vertical-align</span>: top;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">22em</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">P</span><span class="selector-class">.BOX-HEADER</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-weight</span>: bold;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin-bottom</span>: -<span class="number">1ex</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">DIV</span><span class="selector-class">.NEWS</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css"><span class="attribute">width</span>: <span class="number">20em</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css"><span class="attribute">background-color</span>: <span class="number">#ffc426</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin</span>: <span class="number">1em</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">padding</span>: <span class="number">1em</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-style</span>: solid;</span></span><br><span class="line"><span class="language-css"><span class="attribute">border-width</span>: thin;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">LI</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">padding</span>: <span class="number">0pt</span> <span class="number">2pt</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">H1</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin-bottom</span>: <span class="number">0pt</span>;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">P</span><span class="selector-class">.BLURB</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>: <span class="number">12pt</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-style</span>: italic;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-tag">P</span><span class="selector-class">.MORE-BLURBS</span></span></span><br><span class="line"><span class="language-css">&#123;</span></span><br><span class="line"><span class="language-css"><span class="attribute">margin-top</span>: -<span class="number">12pt</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-size</span>: <span class="number">10pt</span>;</span></span><br><span class="line"><span class="language-css"><span class="attribute">font-family</span>: sans-serif;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"><span class="selector-id">#jolt-logo</span> &#123;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">float</span>: right;</span></span><br><span class="line"><span class="language-css">  <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">&#125;</span></span><br><span class="line"><span class="language-css"> --&gt;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&#x27;floater&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;small-cover.gif&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Practical Common Lisp<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.ddj.com/dept/architect/187900423?pgno=4&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">&#x27;jolt-logo&#x27;</span> <span class="attr">src</span>=<span class="string">&quot;jolt_logo16_sm.gif&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;blurb&#x27;</span>&gt;</span>that book is dead sexy <span class="symbol">&amp;mdash;</span>Xach on #lisp<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;more-blurbs&#x27;</span>&gt;</span>(<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;blurbs.html&#x27;</span>&gt;</span>more blurbs<span class="tag">&lt;/<span class="name">a</span>&gt;</span>)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;intro&#x27;</span>&gt;</span>This page, and the pages it links to, contain text</span><br><span class="line">               of the Common Lisp book <span class="tag">&lt;<span class="name">i</span>&gt;</span>Practical Common</span><br><span class="line">               Lisp<span class="tag">&lt;/<span class="name">i</span>&gt;</span> published by <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.apress.com/9781590592397&#x27;</span>&gt;</span>Apress<span class="tag">&lt;/<span class="name">a</span>&gt;</span> These pages now contain the final text as it</span><br><span class="line">               appears in the book. If you find errors in these</span><br><span class="line">               pages, please send email</span><br><span class="line">               to <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;mailto:book@gigamonkeys.com&#x27;</span>&gt;</span>book@gigamonkeys.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.</span><br><span class="line">               These pages will remain online in perpetuity<span class="symbol">&amp;mdash;</span>I hope</span><br><span class="line">               they will serve as a useful introduction to Common</span><br><span class="line">               Lisp for folks who are curious about Lisp but maybe</span><br><span class="line">               not yet curious enough to shell out big bucks for a</span><br><span class="line">               dead-tree book and a good Common Lisp tutorial for folks who want to get down to real coding right away. However, don&#x27;t let that stop you from</span><br><span class="line">               buying the printed version available from Apress at</span><br><span class="line">               your favorite local or online bookseller. For the</span><br><span class="line">               complete bookstore browsing experience, you can read</span><br><span class="line">               the <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;letter-to-reader.html&#x27;</span>&gt;</span>letter to the</span><br><span class="line">               reader<span class="tag">&lt;/<span class="name">a</span>&gt;</span> that appears on the back cover of the</span><br><span class="line">               treeware edition of the book.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;NEWS&#x27;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;box-header&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>Coders at Work<span class="tag">&lt;/<span class="name">i</span>&gt;</span> out!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#x27;font-size: 80%&#x27;</span>&gt;</span>My new book,</span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.codersatwork.com/&#x27;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span>&gt;</span>Coders at Work<span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>, a collection</span><br><span class="line">      of Q<span class="symbol">&amp;amp;</span>A interviews with fifteen all-time great</span><br><span class="line">      programmers and computer scientists, is out and available from</span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.amazon.com/gp/product/1430219483?ie=UTF8<span class="symbol">&amp;amp;</span>tag=gigamonkeys-20<span class="symbol">&amp;amp;</span>linkCode=as2<span class="symbol">&amp;amp;</span>camp=1789<span class="symbol">&amp;amp;</span>creative=9325<span class="symbol">&amp;amp;</span>creativeASIN=1430219483&#x27;</span>&gt;</span>Amazon<span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://search.barnesandnoble.com/booksearch/isbninquiry.asp?box=1430219483<span class="symbol">&amp;amp;</span>pos=-1<span class="symbol">&amp;amp;</span>EAN=9781430219484&#x27;</span>&gt;</span>Barnes <span class="symbol">&amp;amp;</span> Noble<span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.powells.com/biblio/71-9781430219484-0?search_avail=1&#x27;</span>&gt;</span>Powell&#x27;s<span class="tag">&lt;/<span class="name">a</span>&gt;</span>,</span><br><span class="line"> other fine booksellers near you and as an <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.apress.com/9781430219484&#x27;</span>&gt;</span>eBook from Apress<span class="tag">&lt;/<span class="name">a</span>&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;box-header&#x27;</span>&gt;</span>Buy <span class="tag">&lt;<span class="name">i</span>&gt;</span>Practical Common Lisp<span class="tag">&lt;/<span class="name">i</span>&gt;</span> now<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.amazon.com/gp/product/1590592395?ie=UTF8&amp;tag=gigamonkeys-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=1590592395&quot;</span>&gt;</span>Amazon<span class="tag">&lt;/<span class="name">a</span>&gt;</span> |</span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.powells.com/cgi-bin/biblio?inkey=62-1590592395-3&#x27;</span>&gt;</span>Powells<span class="tag">&lt;/<span class="name">a</span>&gt;</span> |</span><br><span class="line">      <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://search.barnesandnoble.com/booksearch/isbnInquiry.asp?isbn=1590592395&#x27;</span>&gt;</span>Barnes <span class="symbol">&amp;amp;</span> Noble<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&#x27;50%&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>Download source code: <span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practicals-1.0.3.tar.gz&#x27;</span>&gt;</span>tar.gz<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practicals-1.0.3.zip&#x27;</span>&gt;</span>zip<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">width</span>=<span class="string">&#x27;50%&#x27;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&#x27;box-header&#x27;</span>&gt;</span>Spread the word<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&#x27;font-size: 80%&#x27;</span>&gt;</span>Like what you&#x27;ve read?</span><br><span class="line">    Then help spread the word. Recommend this book to your friends.</span><br><span class="line">    Write</span><br><span class="line">    a <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;http://www.amazon.com/gp/customer-reviews/write-a-review.html/104-2515398-4782364?%5Fencoding=UTF8<span class="symbol">&amp;amp;</span>asin=1590592395<span class="symbol">&amp;amp;</span>store=books&#x27;</span>&gt;</span>review<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    on Amazon. Blog about it. Link to this page from your web site.</span><br><span class="line">    Whatever. Apress took a chance, publishing this book when other</span><br><span class="line">    publishers thought there was no market for a Lisp book. While</span><br><span class="line">    it&#x27;s unlikely that I&#x27;ll get rich off my royalties, we don&#x27;t have</span><br><span class="line">    to sell all that many copies for Apress to turn a profit and show</span><br><span class="line">    the naysayers that Lisp has legs yet.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;toc&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;introduction-why-lisp.html&#x27;</span>&gt;</span>Introduction: Why Lisp?<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;lather-rinse-repeat-a-tour-of-the-repl.html&#x27;</span>&gt;</span>Lather, Rinse, Repeat: A Tour of the REPL<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-a-simple-database.html&#x27;</span>&gt;</span>Practical: A Simple Database<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;syntax-and-semantics.html&#x27;</span>&gt;</span>Syntax and Semantics<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;functions.html&#x27;</span>&gt;</span>Functions<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;variables.html&#x27;</span>&gt;</span>Variables<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;macros-standard-control-constructs.html&#x27;</span>&gt;</span>Macros: Standard Control Constructs<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;macros-defining-your-own.html&#x27;</span>&gt;</span>Macros: Defining Your Own<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-building-a-unit-test-framework.html&#x27;</span>&gt;</span>Practical: Building a Unit Test Framework<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;numbers-characters-and-strings.html&#x27;</span>&gt;</span>Numbers, Characters, and Strings<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;collections.html&#x27;</span>&gt;</span>Collections<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;they-called-it-lisp-for-a-reason-list-processing.html&#x27;</span>&gt;</span>They Called It LISP for a Reason: List Processing<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;beyond-lists-other-uses-for-cons-cells.html&#x27;</span>&gt;</span>Beyond Lists: Other Uses for Cons Cells<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;files-and-file-io.html&#x27;</span>&gt;</span>Files and File I/O<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-a-portable-pathname-library.html&#x27;</span>&gt;</span>Practical: A Portable Pathname Library<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;object-reorientation-generic-functions.html&#x27;</span>&gt;</span>Object Reorientation: Generic Functions<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;object-reorientation-classes.html&#x27;</span>&gt;</span>Object Reorientation: Classes<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;a-few-format-recipes.html&#x27;</span>&gt;</span>A Few FORMAT Recipes<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;beyond-exception-handling-conditions-and-restarts.html&#x27;</span>&gt;</span>Beyond Exception Handling: Conditions and Restarts<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;the-special-operators.html&#x27;</span>&gt;</span>The Special Operators<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;programming-in-the-large-packages-and-symbols.html&#x27;</span>&gt;</span>Programming in the Large: Packages and Symbols<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;loop-for-black-belts.html&#x27;</span>&gt;</span>LOOP for Black Belts<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-a-spam-filter.html&#x27;</span>&gt;</span>Practical: A Spam Filter<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-parsing-binary-files.html&#x27;</span>&gt;</span>Practical: Parsing Binary Files<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-an-id3-parser.html&#x27;</span>&gt;</span>Practical: An ID3 Parser<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-web-programming-with-allegroserve.html&#x27;</span>&gt;</span>Practical: Web Programming with AllegroServe<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-an-mp3-database.html&#x27;</span>&gt;</span>Practical: An MP3 Database<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-a-shoutcast-server.html&#x27;</span>&gt;</span>Practical: A Shoutcast Server<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-an-mp3-browser.html&#x27;</span>&gt;</span>Practical: An MP3 Browser<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-an-html-generation-library-the-interpreter.html&#x27;</span>&gt;</span>Practical: An HTML Generation Library, the Interpreter<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;practical-an-html-generation-library-the-compiler.html&#x27;</span>&gt;</span>Practical: An HTML Generation Library, the Compiler<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;conclusion-whats-next.html&#x27;</span>&gt;</span>Conclusion: What&#x27;s Next?<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;copyright&#x27;</span>&gt;</span>Copyright <span class="symbol">&amp;copy;</span> 2003-2009, Peter Seibel<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以看见，每一张的标题和链接都被<code>&lt;li&gt;</code>包裹<br>href&#x3D;是文章的相对路径,<br>紧跟着的是文章标题.<br>我们按照先抓大在再抓小的原则,<br>先整体抓取<code>&lt;ol&gt;</code>中的部分:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re <span class="comment">#使用正则表达式</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;https://gigamonkeys.com/book/&#x27;</span></span><br><span class="line"></span><br><span class="line">html = requests.get(url).text</span><br><span class="line">urls = re.search(<span class="string">&quot;&lt;ol.*?&lt;/ol&gt;&quot;</span>, html).group(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>然后抓取名称和链接:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chapter_links = re.findall(<span class="string">&quot;href=&#x27;(.*?)&#x27;&quot;</span>, urls, re.S)</span><br><span class="line">chapter_names = re.findall(<span class="string">&quot;&#x27;&gt;(.*?)&lt;/a&quot;</span>, urls, re.S)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>搞完以后，把它们下载下来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> makedirs</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">makedirs(<span class="string">&quot;commonlisp&quot;</span>, exist_ok = <span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> name, link <span class="keyword">in</span> <span class="built_in">zip</span>(chapter_names, chapter_links):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;downloading &quot;</span> + name + <span class="string">&quot;...&quot;</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;commonlisp/&quot;</span> + link, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        file.write(requests.get(url + link).text)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;done.&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个爬虫程序可以说是非常简单，因为它只有源代码爬取功能，没有做数据清洗，所以不是给人看的，而且因为是单线程，速度方面不够优秀，不过范例章节比较少，也算是差强人意</p><p>完整代码:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">from</span> os <span class="keyword">import</span> makedirs, path</span><br><span class="line">    <span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">    <span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;导入包出错:&quot;</span>,  e, <span class="string">&quot;\n请检查环境是否完整&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line">url = <span class="string">&#x27;https://gigamonkeys.com/book/&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    html = requests.get(url).text</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;网络错误, 获取网页失败&quot;</span>)</span><br><span class="line">    exit()</span><br><span class="line"></span><br><span class="line">urls = re.search(<span class="string">&quot;&lt;ol(.*?)&lt;/ol&gt;&quot;</span>, html, re.S).group(<span class="number">1</span>)</span><br><span class="line">chapter_name = re.findall(<span class="string">&quot;&#x27;&gt;(.*?)&lt;/a&quot;</span>, urls, re.S)</span><br><span class="line">chapter_link = re.findall(<span class="string">&quot;href=&#x27;(.*?)&#x27;&quot;</span>, urls, re.S)</span><br><span class="line"></span><br><span class="line">makedirs(<span class="string">&quot;commonlisp&quot;</span>, exist_ok = <span class="literal">True</span>)</span><br><span class="line"><span class="keyword">for</span> name, link <span class="keyword">in</span> <span class="built_in">zip</span>(chapter_name, chapter_link):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Downloading&quot;</span>, name, <span class="string">&quot;. . . &quot;</span>, end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(path.join(<span class="string">&#x27;commonlisp&#x27;</span>, link), <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">            file.write(requests.get(url + link).text)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;done&quot;</span>)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;error&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(e)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;complete&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>哈哈，被try except淹没的感觉</p><p>线程池优化版本<br>try..except: 战战兢兢，如临深渊，如履薄冰 (•̥́_•ૅू˳)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> os <span class="keyword">import</span> makedirs</span><br><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">save</span>(<span class="params">name, link</span>):</span><br><span class="line">    <span class="keyword">if</span> name <span class="keyword">and</span> link:</span><br><span class="line">        exit()</span><br><span class="line">    makedirs(<span class="string">&quot;commonlisp&quot;</span>, exist_ok=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;commonlisp&quot;</span> + link, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(requests.get(url + link).text)</span><br><span class="line">        <span class="built_in">print</span>(name)</span><br><span class="line">        </span><br><span class="line">url = <span class="string">&#x27;https://gigamonkeys.com/book/&#x27;</span></span><br><span class="line">html = requests.get(<span class="string">&#x27;https://gigamonkeys.com/book/&#x27;</span>).text</span><br><span class="line"></span><br><span class="line">urls = re.search(<span class="string">&quot;&lt;ol(.*?)&lt;/ol&gt;&quot;</span>, html, re.S).group(<span class="number">1</span>)</span><br><span class="line">chapter_name = re.findall(<span class="string">&quot;&#x27;&gt;(.*?)&lt;/a&quot;</span>, urls, re.S)</span><br><span class="line">chapter_link = re.findall(<span class="string">&quot;href=&#x27;(.*?)&#x27;&quot;</span>, urls, re.S)</span><br><span class="line"></span><br><span class="line">pool = Pool(<span class="number">4</span>)</span><br><span class="line"><span class="comment">#with Pool(4) as pool:</span></span><br><span class="line">    <span class="comment">#pool.starmap(save, zip(chapter_name, chapter_link))</span></span><br><span class="line">pool.starmap(save, <span class="built_in">zip</span>(chapter_name, chapter_link))</span><br><span class="line">pool.join()</span><br><span class="line">pool.close()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hello-world</title>
      <link href="/2022/08/10/hello-world/"/>
      <url>/2022/08/10/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="Welcome-to-my-blog"><a href="#Welcome-to-my-blog" class="headerlink" title="Welcome to my blog!"></a>Welcome to my blog!</h1>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机密文件 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
